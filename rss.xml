<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Mark Yarian]]></title>
        <description><![CDATA[Mark Yarian]]></description>
        <link>http://www.yarian.com/</link>
        <generator>The Grid</generator>
        <lastBuildDate>Wed, 11 May 2016 18:19:52 GMT</lastBuildDate>
        <atom:link href="http://www.yarian.com/rss.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[AI Websites That Design Themselves]]></title>
            <description><![CDATA[<img src="https://the-grid-user-content.s3-us-west-2.amazonaws.com/7fc5249d-ddcc-4f4f-ac18-e1c349295848.jpg">]]></description>
            <link>http://www.yarian.com/ai-websites-that-design-themselves/index.html</link>
            <guid isPermaLink="false">192ca884-265d-45dd-8d1a-74838074afff</guid>
            <pubDate>Sun, 17 Apr 2016 03:05:02 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Linux Crontab: 15 Awesome Cron Job Examples]]></title>
            <description><![CDATA[<article><h1>Linux Crontab: 15 Awesome Cron Job Examples</h1><p>An experienced Linux sysadmin knows the importance of running the routine maintenance jobs in the background automatically. Linux Cron utility is an effective way to schedule a routine background job at a specific time and/or day on an on-going basis. This article is part of the on-going Productivity Tips For Geeks series.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/b07114a265ab6fa5205c1c1db4471e0d630375a5.png"></article>]]></description>
            <link>http://www.thegeekstuff.com/2009/06/15-practical-crontab-examples/</link>
            <guid isPermaLink="false">abde6e7c-e92b-4357-8cc6-d0c6d63d7af3</guid>
            <pubDate>Wed, 11 May 2016 18:18:58 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[The Ultimate Bash Array Tutorial with 15 Examples]]></title>
            <description><![CDATA[<article><h1>The Ultimate Bash Array Tutorial with 15 Examples</h1><p>An array is a variable containing multiple values may be of same type or of different type. There is no maximum limit to the size of an array, nor any</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/b538e834fa2801a9507ea96cf2fd400f97063883.gif"></article>]]></description>
            <link>http://www.thegeekstuff.com/2010/06/bash-array-tutorial/</link>
            <guid isPermaLink="false">9eca06f9-dc60-47ed-b190-b6b66d1b6905</guid>
            <pubDate>Wed, 11 May 2016 18:18:58 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[UNIX / Linux: 10 Netstat Command Examples]]></title>
            <description><![CDATA[<article><h1>UNIX / Linux: 10 Netstat Command Examples</h1><p>Netstat command displays various network related information such as network connections, routing tables, interface statistics, masquerade connections, multicast memberships etc., In this article, let us review 10 practical unix netstat command examples.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/b07114a265ab6fa5205c1c1db4471e0d630375a5.png"></article>]]></description>
            <link>http://www.thegeekstuff.com/2010/03/netstat-command-examples/</link>
            <guid isPermaLink="false">5ee3fac5-1538-4fb9-ab5e-d6914ff4e879</guid>
            <pubDate>Wed, 11 May 2016 18:18:58 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Can You Top This? 15 Practical Linux Top Command Examples]]></title>
            <description><![CDATA[<article><h1>Can You Top This? 15 Practical Linux Top Command Examples</h1><p>This article is part of the on-going 15 example series where 15 examples will be provided for a specific command or functionality. In this series, earlier we discussed about find command, crontab examples, grep command, history command, ping command, and wget examples.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/b049957ced960c70d68e4245a2e3d40a1960d1fa.png"></article>]]></description>
            <link>http://www.thegeekstuff.com/2010/01/15-practical-unix-linux-top-command-examples/</link>
            <guid isPermaLink="false">b020b078-107a-4721-af79-8d4177c73e6f</guid>
            <pubDate>Wed, 11 May 2016 18:18:58 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Connectwise API with PHP? * /r/msp]]></title>
            <description><![CDATA[<article><h1>Connectwise API with PHP? * /r/msp</h1><p>Anyone familiar with using the Connectwise SOAP API using PHP? Specifically, the time entry API. I'm having trouble getting it to work and I'm...</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/03bb1b5a93fc0720701b7f7e37541340963fd151.png"></article>]]></description>
            <link>https://www.reddit.com/r/msp/comments/3f806g/connectwise_api_with_php/</link>
            <guid isPermaLink="false">655d33a0-1a01-42fe-84b1-53b5ce826f67</guid>
            <pubDate>Wed, 11 May 2016 18:18:58 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Call a REST API in PHP]]></title>
            <description><![CDATA[<article><h1>Call a REST API in PHP</h1><p>You will need to know if the REST API you are calling supports GET or POST, or both methods. The code below is something that works for me, I'm calling my own web service API, so I already know what the API takes and what it will return.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/ec21b91c231dacf255e8d8ff034dc20f1aae4ba7.png"></article>]]></description>
            <link>http://stackoverflow.com/questions/9802788/call-a-rest-api-in-php</link>
            <guid isPermaLink="false">bb9cc043-cd90-47b9-8942-efba4bfb5f9d</guid>
            <pubDate>Wed, 11 May 2016 18:18:57 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How to make REST calls in PHP]]></title>
            <description><![CDATA[<article><h1>How to make REST calls in PHP</h1><p>Example of calling GET request //next example will recieve all messages for specific conversation $service_url = 'http://example.com/api/conversations/[CONV_CODE]/messages&apikey=[API_KEY]'; $curl = c</p><img src="https://imgflo.herokuapp.com/graph/vahj1ThiexotieMo/c598f102a6e85c4c6742e8df717d9e2f/croprotate.php?cropheight=41&cropwidth=243&degrees=0&input=https%3A%2F%2Fsupport.ladesk.com%2Fscripts%2Ffile.php%3Fview%3DY%26file%3D2a2f2096ece5375232b72bead5de4c81&x=0&y=2"></article>]]></description>
            <link>https://support.ladesk.com/061754-How-to-make-REST-calls-in-PHP</link>
            <guid isPermaLink="false">58f25291-7360-483f-8855-64ee3e5b19ca</guid>
            <pubDate>Wed, 11 May 2016 18:18:57 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Base64 Decode and Encode - Online]]></title>
            <description><![CDATA[<article><h1>Base64 Decode and Encode - Online</h1><p>Base64 Base64 is a generic term for a number of similar encoding schemes that encode binary data by treating it numerically and translating it into a base 64 representation. The Base64 term originates from a specific MIME content transfer encoding.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/2379c23c44172eb32f02a0b93833dfc8942fd279.jpg"></article>]]></description>
            <link>https://www.base64encode.org/</link>
            <guid isPermaLink="false">cdd9775f-0240-42f6-9e53-84505214616e</guid>
            <pubDate>Wed, 11 May 2016 18:18:57 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[REST API - A Simple PHP Tutorial]]></title>
            <description><![CDATA[<article><h1>REST API - A Simple PHP Tutorial</h1><p>A REST API allows your users to interact with your website from anything that can send an HTTP request. The Twitter feed displayed on the right side of this blog is using a REST API from twitter. It allows me to pull my latest tweets and display them.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/334e6f26a27868da2d99258bfceb234c0b2f1842.jpg"></article>]]></description>
            <link>http://blog.ijasoneverett.com/2013/02/rest-api-a-simple-php-tutorial/</link>
            <guid isPermaLink="false">7fc73c70-476f-4a6e-a842-df73ff3e25bc</guid>
            <pubDate>Wed, 11 May 2016 18:18:57 GMT</pubDate>
        </item>
    </channel>
</rss>