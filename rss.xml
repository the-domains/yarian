<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Mark Yarian]]></title>
        <description><![CDATA[Mark Yarian]]></description>
        <link>http://www.yarian.com/</link>
        <generator>The Grid</generator>
        <lastBuildDate>Wed, 11 May 2016 18:19:01 GMT</lastBuildDate>
        <atom:link href="http://www.yarian.com/rss.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[AI Websites That Design Themselves]]></title>
            <description><![CDATA[<img src="https://the-grid-user-content.s3-us-west-2.amazonaws.com/7fc5249d-ddcc-4f4f-ac18-e1c349295848.jpg">]]></description>
            <link>http://www.yarian.com/ai-websites-that-design-themselves/index.html</link>
            <guid isPermaLink="false">192ca884-265d-45dd-8d1a-74838074afff</guid>
            <pubDate>Sun, 17 Apr 2016 03:05:02 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Creating a simple REST API in PHP]]></title>
            <description><![CDATA[<article><h1>Creating a simple REST API in PHP</h1><p>I'm the author of php-crud-api and I want to share the core of the application with you. It includes routing a JSON REST request, converting it into SQL, executing it and giving a meaningful response.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/db36ab790f69a1d028a02e8332582243aeddf701.png"></article>]]></description>
            <link>https://www.leaseweb.com/labs/2015/10/creating-a-simple-rest-api-in-php/</link>
            <guid isPermaLink="false">4116148f-cdff-4ae6-b5e6-737af4d7aadf</guid>
            <pubDate>Wed, 11 May 2016 18:18:57 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Learn REST: A Tutorial]]></title>
            <description><![CDATA[<article><h1>Learn REST: A Tutorial</h1><p>Issuing GET Requests Modern versions of PHP make it trivial to GET web pages: any file-access function (even include!) works seamlessly with URLs, too. Thus, you can use , file_get_contents , and any other file-reading function to issue GET requests.</p></article>]]></description>
            <link>http://rest.elkstein.org/2008/02/using-rest-in-php.html</link>
            <guid isPermaLink="false">b6a8eb9d-ea4e-414d-bf33-5c852ce0877d</guid>
            <pubDate>Wed, 11 May 2016 18:18:57 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[ConnectWise REST API]]></title>
            <description><![CDATA[<article><h1>ConnectWise REST API</h1><p>This section is definitely optional for you. And if you leave it in, you will need to make some changes. In my testing i found that the summary field can only be 100 characters so im truncating my data just in case its near that limit.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/f05cab48e62f49be00b1b5bc3a011be2e8512b82.png"></article>]]></description>
            <link>http://justanotherpsblog.com/category/connectwise/</link>
            <guid isPermaLink="false">dec2df4e-a6df-4480-8b1b-67f1564b3b9c</guid>
            <pubDate>Wed, 11 May 2016 18:18:57 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[PHP - Retrieving XML With Curl and SimpleXML - PHP Tutorials]]></title>
            <description><![CDATA[<article><h1>PHP - Retrieving XML With Curl and SimpleXML - PHP Tutorials</h1><p>PHP 5 introduces SimpleXML and its a perfect name as parsing XML data is truly simple. In this tutorial we'll be using curl to retrieve the XML data from a remote web server. We're going to create a class to connect to the remote web server and pass POST data to the server and based on the POST data the remote server will return valid XML.</p></article>]]></description>
            <link>http://www.higherpass.com/php/tutorials/retrieving-xml-with-curl-and-simplexml/</link>
            <guid isPermaLink="false">512a9f7d-2621-4d79-a3ce-9eb8113c8c85</guid>
            <pubDate>Wed, 11 May 2016 02:02:13 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Writing Logs Into Tables]]></title>
            <description><![CDATA[<article><h1>Writing Logs Into Tables</h1><p>By default, all logs are disabled or written into files. The general query log and the slow query log can also be written to special tables in the mysql database. During the startup, entries will always be written into files.</p></article>]]></description>
            <link>https://mariadb.com/kb/en/mariadb/writing-logs-into-tables/</link>
            <guid isPermaLink="false">8713da8e-6937-49cd-8187-4320408453f9</guid>
            <pubDate>Wed, 11 May 2016 02:02:12 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How to use "grep" command to find text including subdirectories]]></title>
            <description><![CDATA[<article><h1>How to use "grep" command to find text including subdirectories</h1><p>I want to find all files which contain a specific string of text. The grep command works, but I don't know how to use it for every directory (I can only do it for my current directory). I tried rea...</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/e08e1ffd00063338d06d46eb49eaafd8f752cbca.png"></article>]]></description>
            <link>http://askubuntu.com/questions/55325/how-to-use-grep-command-to-find-text-including-subdirectories</link>
            <guid isPermaLink="false">47ec6423-391e-47e2-9847-c1e994811117</guid>
            <pubDate>Wed, 11 May 2016 02:02:12 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[XML parsing in PHP - Pixelcode]]></title>
            <description><![CDATA[<article><h1>XML parsing in PHP - Pixelcode</h1><p>We firstly need to create the parser: $parser = xml_parser_create(); When the parser reads the XML it can call functions that we can then add code to handle. The code below makes the parser call function when a new element is found within an XML document, and when the end of an element is detected.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/9014eb7d0f7085e00168b042786e450f709087cf.png"></article>]]></description>
            <link>http://pixelcode.co.uk/tutorials/xml/xml-parsing-in-php/</link>
            <guid isPermaLink="false">d98e7289-f370-4f4e-92c4-fd704860bbd2</guid>
            <pubDate>Wed, 11 May 2016 02:02:12 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[PHP xml_parser_create() Function]]></title>
            <description><![CDATA[<article><h1>PHP xml_parser_create() Function</h1><p>Well organized and easy to understand Web bulding tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, and XML.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/da5741fb1339c275b50559e87e211f0a2cee9f00.gif"></article>]]></description>
            <link>http://www.w3schools.com/php/func_xml_parser_create.asp</link>
            <guid isPermaLink="false">bcc6afd2-b746-48d0-9050-05d33baa10a3</guid>
            <pubDate>Wed, 11 May 2016 02:02:12 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Installing SNMP MIB files in Linux Ubuntu 12.04 LTS, 14.04 LTS and 16.04 LTS]]></title>
            <description><![CDATA[<article><h1>Installing SNMP MIB files in Linux Ubuntu 12.04 LTS, 14.04 LTS and 16.04 LTS</h1><p>I'm in the middle of upgrading old servers but it was just only yesterday that I found Ubuntu 12.04 didn't install the MIB files. Even if you install the SNMP applications. It was really strange to launch tkmib and just see a couple of nodes. The explanation is simple.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/334e6f26a27868da2d99258bfceb234c0b2f1842.jpg"></article>]]></description>
            <link>http://thejoyofstick.com/blog/2012/12/01/installing-snmp-mib-files-in-linux-ubuntu-12-04-lts/</link>
            <guid isPermaLink="false">c1eb96b0-47a5-4e29-a098-2f81242bd689</guid>
            <pubDate>Wed, 11 May 2016 02:02:12 GMT</pubDate>
        </item>
    </channel>
</rss>